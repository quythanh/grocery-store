"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[344],{8207:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"dev-flow","title":"Development Flow","description":"We don\'t work directly on master or staging branch. We need to create a new branch for each task. The new branch should derive from master branch.","source":"@site/docs/dev-flow.md","sourceDirName":".","slug":"/dev-flow","permalink":"/grocery-store/docs/dev-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/quythanh/grocery-store/blob/main/docs/docs/dev-flow.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Code of Conduct","permalink":"/grocery-store/docs/coc"},"next":{"title":"Contribution","permalink":"/grocery-store/docs/contrib"}}');var o=r(6070),c=r(6599);const a={},s="Development Flow",i={},d=[{value:"Branching model",id:"branching-model",level:2},{value:"1. Feature branch",id:"1-feature-branch",level:3},{value:"2. Bugfix branch",id:"2-bugfix-branch",level:3},{value:"3. Hotfix branch",id:"3-hotfix-branch",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"development-flow",children:"Development Flow"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["We don't work directly on master or staging branch. We need to create a new branch for each task. The new branch should derive from ",(0,o.jsx)(n.code,{children:"master"})," branch."]})}),"\n",(0,o.jsx)(n.h2,{id:"branching-model",children:"Branching model"}),"\n",(0,o.jsx)(n.p,{children:"Define how you want your branches to be named, and specify your development and production branches, to help us suggest source and target branches."}),"\n",(0,o.jsx)(n.p,{children:"Branch prefixes\nDefine the default prefixes for new branches, to allow automated workflows and make branch types clearer."}),"\n",(0,o.jsx)(n.h3,{id:"1-feature-branch",children:"1. Feature branch"}),"\n",(0,o.jsx)(n.p,{children:"Used for specific feature work or improvements. Generally branches from, and merges back into, the development branch, using pull requests."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"feature/{{jira-task-number}}-{{short-description}}"})}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"feature/FL-16-cart-changes"})]}),"\n",(0,o.jsx)(n.h3,{id:"2-bugfix-branch",children:"2. Bugfix branch"}),"\n",(0,o.jsx)(n.p,{children:"Typically used to fix Release branches."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"bugfix/{{jira-task-number}}-{{short-description}}"})}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"bugfix/FL-165-cannot-create-credit-memo"})]}),"\n",(0,o.jsx)(n.h3,{id:"3-hotfix-branch",children:"3. Hotfix branch"}),"\n",(0,o.jsx)(n.p,{children:"Used to quickly fix a Production branch without interrupting changes in the development branch. In a Gitflow-based workflow, changes are usually merged into the production and development branches."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"hotfix/{{jira-task-number}}-{{short-description}}"})}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"hotfix/FL-165-catch-exception-when-payment-failed"})]})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},6599:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(758);const o={},c=t.createContext(o);function a(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);